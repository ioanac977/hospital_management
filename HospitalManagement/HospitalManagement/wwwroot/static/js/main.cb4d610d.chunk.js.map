{"version":3,"sources":["components/AppHeader.js","components/AppFooter.js","constants/index.js","components/PatientsList.js","components/Home.js","components/form/RegistrationForm.js","components/form/RegistrationModal.js","components/UsersList.js","components/Users.js","components/Account.js","components/form/auth/Login.js","components/form/auth/Logout.js","components/PrivateRoute.js","_helpers/Role.js","components/Patients.js","components/ProtectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["AppHeader","state","isOpen","toggle","bind","this","setState","authUser","JSON","parse","localStorage","getItem","Navbar","color","dark","expand","NavbarBrand","href","src","width","className","alt","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","to","isAdmin","Component","AppFooter","style","padding","React","PATIENTS_API_URL","USERS_API_URL","LOGOUT_API_URL","PatientsList","props","nameFilter","hospitalFilter","isDropdownOpen","e","target","value","console","log","sessionStorage","items","filter","d","name","toLowerCase","includes","hospital","distinctHospitalItems","index","self","map","x","indexOf","id","type","onChange","onChangeHandler","Dropdown","onDropDownToogle","DropdownToggle","caret","DropdownMenu","DropdownItem","onDropdownSelectAll","divider","length","item","onDropdownItemSelect","Table","striped","colSpan","align","scope","dateOfBirth","Home","Redirect","RegistrationForm","username","password","handleCheckbox","event","checked","submitNew","preventDefault","fetch","method","headers","body","stringify","then","res","json","user","addUserToState","catch","err","submitEdit","updateUserIntoState","Form","onSubmit","FormGroup","Label","for","Input","Button","RegistrationModal","modal","previous","title","button","isNew","minWidth","Modal","ModalHeader","ModalBody","UsersList","deleteItem","window","confirm","deleteItemFromState","textAlign","toString","updateState","Users","getItens","updated","Container","paddingTop","Row","Col","Account","undefined","authUserFromStorage","Login","handleChange","a","validate","usernameState","navigate","credentials","setItem","handleLogin","submitForm","placeholder","valid","invalid","validateEmail","FormFeedback","FormText","Logout","logout","removeItem","handleLogout","push","PrivateRoute","component","rest","roles","render","currentUser","pathname","from","location","Role","Patients","getItems","ProtectedRoute","App","setGlobalCredentials","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb4d610d.chunk.js","sourcesContent":["import React, {Component, Fragment} from 'react'; // 1\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    NavbarToggler,\r\n    Collapse,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem\r\n} from 'reactstrap';\r\nimport {Link} from \"react-router-dom\"; // 2\r\nclass AppHeader extends Component { // 3\r\n    state = { // 4\r\n        isOpen: false\r\n    };\r\n    toggle = this.toggle.bind(this); // 5\r\n    toggle() { // 6\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    }\r\n    render() { // 7\r\n        let authUser = JSON.parse(localStorage.getItem(\"authorizedUser\"))\r\n        return <Navbar color=\"dark\" dark expand=\"md\">\r\n            <NavbarBrand href=\"/\">\r\n                <img src=\"https://seeklogo.com/images/H/hospital-clinic-plus-logo-7916383C7A-seeklogo.com.png\" width=\"50\" className=\"d-inline-block align-top\" alt=\"\" />\r\n            </NavbarBrand>\r\n            <NavbarToggler onClick={this.toggle} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n                <Nav className=\"ml-auto\" navbar>\r\n                    {authUser !=null &&\r\n                        <Fragment>\r\n                    <NavItem >\r\n                        <Link className=\"Link\" to=\"/patients\">Patients</Link>\r\n                    </NavItem>\r\n                            {authUser.isAdmin &&\r\n\r\n                    <NavItem>\r\n                        <Link to =\"/users\">Users</Link>\r\n                    </NavItem>\r\n                                }\r\n                    <NavItem>\r\n                        <Link to = \"/account\">Account</Link>\r\n                    </NavItem>\r\n                    {/*<NavItem>*/}\r\n                    {/*    <Link to=\"/login\">Login</Link>*/}\r\n                    {/*</NavItem>*/}\r\n                    <NavItem>\r\n                        <Link to=\"/logout\">Logout</Link>\r\n                    </NavItem>\r\n                        </Fragment>\r\n                        }\r\n\r\n                </Nav>\r\n            </Collapse>\r\n        </Navbar>;\r\n    }\r\n}\r\nexport default AppHeader; // 8","import React, { Fragment } from 'react';\r\nclass AppFooter extends React.Component {\r\n    render() {\r\n        return <Fragment>\r\n            <hr className=\"featurette-divider\" />\r\n            <footer style={{ padding: \"0 50px\" }} className=\"navbar fixed-bottom\">\r\n                <p className=\"float-right\"><a href=\"/\">Back to the Top</a></p>\r\n                <p>© 2021 Ioana Cristea <a href=\"/\">Terms and Conditions</a></p>\r\n            </footer>\r\n        </Fragment>;\r\n    }\r\n}\r\nexport default AppFooter;","export const PATIENTS_API_URL = 'api/Patients';\r\nexport const USERS_API_URL = 'api/Users';\r\nexport const AUTH_API_URL = 'api/Auth/Login';\r\nexport const LOGOUT_API_URL = 'api/Auth/Logout';","import React, { Component } from 'react';\r\nimport { Table, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport {PATIENTS_API_URL} from \"../constants\";\r\n\r\nclass PatientsList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            nameFilter :'',\r\n            hospitalFilter :'',\r\n            isDropdownOpen : false,\r\n\r\n        };\r\n    }\r\n\r\n    onChangeHandler(e){\r\n        this.setState({\r\n            nameFilter: e.target.value,\r\n        })\r\n    }\r\n    onDropDownToogle(e){\r\n        this.setState({\r\n            isDropdownOpen: !this.state.isDropdownOpen,\r\n        })\r\n    }\r\n    onDropdownItemSelect (e)\r\n    {\r\n        console.log(\"click value :\",e);\r\n        this.setState({\r\n            hospitalFilter: e,\r\n        })\r\n\r\n    }\r\n    onDropdownSelectAll(){\r\n        this.setState({\r\n            hospitalFilter: '',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(\"sessionStorage on login:\",sessionStorage.getItem('token'));\r\n        let items = this.props.items\r\n            .filter(d => this.state.nameFilter === '' || (d.name.toLowerCase()).includes((this.state.nameFilter).toLowerCase()))\r\n        items = items\r\n            .filter(d => this.state.hospitalFilter === '' || d.hospital.includes(this.state.hospitalFilter))\r\n        let distinctHospitalItems = this.props.items\r\n            .filter((value, index, self) => self\r\n                .map(x => x.hospital)\r\n                .indexOf(value.hospital) === index)\r\n\r\n        return <div>\r\n            <p>\r\n                Type to filter list by name:\r\n                <input id=\"nameFilter\"\r\n                       name=\"nameFilter\"\r\n                       type=\"text\"\r\n                       value={this.state.nameFilter}\r\n                       onChange={this.onChangeHandler.bind(this)}\r\n                />\r\n                <Dropdown isOpen={this.state.isDropdownOpen} toggle={this.onDropDownToogle.bind(this)}>\r\n                    <DropdownToggle caret>\r\n                        {this.state.hospitalFilter === '' ? \"Hospital\" : this.state.hospitalFilter}\r\n                    </DropdownToggle>\r\n\r\n                    <DropdownMenu>\r\n                        <DropdownItem onClick={() => this.onDropdownSelectAll()}>All</DropdownItem>\r\n                        <DropdownItem divider></DropdownItem>\r\n                        {!distinctHospitalItems || distinctHospitalItems.length <= 0 ?\r\n                            <div>\r\n                                \"No Data!\"\r\n                            </div>\r\n\r\n                         : distinctHospitalItems.map(item => (\r\n                        <DropdownItem onClick={() => this.onDropdownItemSelect(item.hospital)} >{item.hospital}</DropdownItem>\r\n                            ))}\r\n                    </DropdownMenu>\r\n\r\n                </Dropdown>\r\n            </p>\r\n\r\n            <Table striped>\r\n            <thead className=\"thead-dark\">\r\n            <tr>\r\n                <th>Id</th>\r\n                <th>Name</th>\r\n                <th>Date Of Birth</th>\r\n                <th>Hospital</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {!items || items.length <= 0 ?\r\n                <tr>\r\n                    <td colSpan=\"5\" align=\"center\"><b>No patients added yet!</b></td>\r\n                </tr>\r\n                : items.map(item => (\r\n                    <tr key={item.id}>\r\n                        <th scope=\"row\">\r\n                            {item.id}\r\n                        </th>\r\n                        <td>\r\n                            {item.name}\r\n                        </td>\r\n                        <td>\r\n                            {item.dateOfBirth}\r\n                        </td>\r\n                        <td>\r\n                            {item.hospital}\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </Table>\r\n        </div>;\r\n    }\r\n}\r\nexport default PatientsList;","import React, { Component } from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport PatientsList from './PatientsList';\r\nimport { PATIENTS_API_URL } from '../constants';\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        let authUserFromStorage=JSON.parse(localStorage.getItem(\"authorizedUser\"));\r\n        if(authUserFromStorage!=null){\r\n           return <div>\r\n               <img src= \"https://cdn.dribbble.com/users/112162/screenshots/1130822/lifeline.gif\" />\r\n           </div>\r\n        }\r\n        return (<Redirect to={'/login'}/>)\r\n    }\r\n}\r\nexport default Home;","import React from 'react';\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nimport { USERS_API_URL } from '../../constants';\r\n\r\nclass RegistrationForm extends React.Component {\r\n\r\n    state = {\r\n        id: 0,\r\n        username: '',\r\n        password: '',\r\n        name: '',\r\n        isAdmin: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleCheckbox.bind(this);\r\n        if (this.props.user) {\r\n            const { id, username, password, name, isAdmin } = this.props.user\r\n            this.setState({ id, username, password, name, isAdmin});\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    handleCheckbox= event => {\r\n\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        console.log(\"value is :\",value)\r\n        console.log(\"name:\",name)\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n    }\r\n\r\n    submitNew = e => {\r\n        e.preventDefault();\r\n\r\n        fetch(`${USERS_API_URL}`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n                name: this.state.name,\r\n                isAdmin: this.state.isAdmin\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(user => {\r\n                this.props.addUserToState(user);\r\n                this.props.toggle();\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    submitEdit = e => {\r\n        console.log(\"props are:\",this.props)\r\n        e.preventDefault();\r\n        fetch(`${USERS_API_URL}/${this.state.id}`, {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n                name: this.state.name,\r\n                isAdmin: this.state.isAdmin\r\n            })\r\n        })\r\n            .then(() => {\r\n                this.props.toggle();\r\n                this.props.updateUserIntoState(this.state.id);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        return <Form onSubmit={this.props.user ? this.submitEdit : this.submitNew}>\r\n            <FormGroup>\r\n                <Label for=\"username\">Username:</Label>\r\n                <Input type=\"text\" name=\"username\" onChange={this.onChange} value={this.state.username === '' ? '' : this.state.username} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"password\">Password:</Label>\r\n                <Input type=\"text\" name=\"password\" onChange={this.onChange} value={this.state.password === null ? '' : this.state.password} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"name\">Name:</Label>\r\n                <Input type=\"text\" name=\"name\" onChange={this.onChange} value={this.state.name === null ? '' : this.state.name} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"name\">IsAdmin:</Label>\r\n                <Input type=\"checkbox\" name=\"isAdmin\" onChange={this.handleCheckbox} checked={this.state.isAdmin} />\r\n            </FormGroup>\r\n\r\n            <Button>Send</Button>\r\n        </Form>;\r\n    }\r\n}\r\n\r\nexport default RegistrationForm;","import React, { Component, Fragment } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport RegistrationForm from './RegistrationForm';\r\n\r\nclass RegistrationModal extends Component {\r\n\r\n    state = {\r\n        modal: false\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState(previous => ({\r\n            modal: !previous.modal\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        const isNew = this.props.isNew;\r\n\r\n        let title = 'Edit User';\r\n        let button = '';\r\n        if (isNew) {\r\n            title = 'Add User';\r\n\r\n            button = <Button\r\n                color=\"success\"\r\n                onClick={this.toggle}\r\n                style={{ minWidth: \"200px\" }}>Add</Button>;\r\n        } else {\r\n            button = <Button\r\n                color=\"warning\"\r\n                onClick={this.toggle}>Edit</Button>;\r\n        }\r\n\r\n        return <Fragment>\r\n            {button}\r\n            <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n                <ModalHeader toggle={this.toggle}>{title}</ModalHeader>\r\n\r\n                <ModalBody>\r\n                    <RegistrationForm\r\n                        addUserToState={this.props.addUserToState}\r\n                        updateUserIntoState={this.props.updateUserIntoState}\r\n                        toggle={this.toggle}\r\n                        user={this.props.user} />\r\n                </ModalBody>\r\n            </Modal>\r\n        </Fragment>;\r\n    }\r\n}\r\n\r\nexport default RegistrationModal;","import React, { Component } from 'react';\r\nimport {Table, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Col, Row, Container, Button} from 'reactstrap';\r\nimport { USERS_API_URL } from '../constants';\r\nimport RegistrationModal from \"./form/RegistrationModal\";\r\nclass UsersList extends Component {\r\n\r\n    deleteItem = id => {\r\n        let confirmDeletion = window.confirm('Do you really wish to delete it?');\r\n        if (confirmDeletion) {\r\n            fetch(`${USERS_API_URL}/${id}`, {\r\n                method: 'delete',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(res => {\r\n                    this.props.deleteItemFromState(id);\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const items = this.props.items;\r\n\r\n        return <Table striped>\r\n                <thead className=\"thead-dark\">\r\n                <tr>\r\n                    <th>Id</th>\r\n                    <th>Username</th>\r\n                    <th>Password</th>\r\n                    <th>Name</th>\r\n                    <th>Is Admin</th>\r\n                    <th style={{ textAlign: \"center\" }}>Actions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {!items || items.length <= 0 ?\r\n                    <tr>\r\n                        <td colSpan=\"5\" align=\"center\"><b>No userss added yet!</b></td>\r\n                    </tr>\r\n                    : items.map(item => (\r\n                        <tr key={item.id}>\r\n                            <th scope=\"row\">\r\n                                {item.id}\r\n                            </th>\r\n                            <td>\r\n                                {item.username}\r\n                            </td>\r\n                            <td>\r\n                                {item.password}\r\n                            </td>\r\n                            <td>\r\n                                {item.name}\r\n                            </td>\r\n                            <td>\r\n                                {item.isAdmin.toString()}\r\n                            </td>\r\n                            <td align=\"center\">\r\n                                <div>\r\n                                    <RegistrationModal\r\n                                        isNew={false}\r\n                                        user={item}\r\n                                        updateUserIntoState={this.props.updateState} />\r\n                                    &nbsp;&nbsp;&nbsp;\r\n                                    <Button color=\"danger\" onClick={() => this.deleteItem(item.id)}>Delete</Button>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n    }\r\n}\r\nexport default UsersList;","import React, { Component } from 'react';\r\nimport {Table, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Col, Row, Container, Button} from 'reactstrap';\r\nimport { USERS_API_URL } from '../constants';\r\nimport RegistrationModal from \"./form/RegistrationModal\";\r\nimport UsersList from \"./UsersList\";\r\nclass Users extends Component {\r\n    state = {\r\n        items: []\r\n    }\r\n    componentDidMount() {\r\n        this.getItens();\r\n    }\r\n    getItens = () => {\r\n        fetch(USERS_API_URL)\r\n            .then(res => res.json())\r\n            .then(res => this.setState({ items: res }))\r\n            .catch(err => console.log(err));\r\n    }\r\n    addUserToState = user => {\r\n        this.setState(previous => ({\r\n            items: [...previous.items, user]\r\n        }));\r\n    }\r\n    updateState = (id) => {\r\n        this.getItens();\r\n    }\r\n    deleteItemFromState = id => {\r\n        const updated = this.state.items.filter(item => item.id !== id);\r\n        this.setState({ items: updated })\r\n    }\r\n\r\n    render() {\r\n\r\n        return <Container style={{ paddingTop: \"100px\" }}>\r\n            <Row>\r\n                <Col>\r\n                    <h3>Users</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <UsersList\r\n                        items={this.state.items}\r\n                        updateState={this.updateState}\r\n                        deleteItemFromState={this.deleteItemFromState} />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <RegistrationModal isNew={true} addUserToState={this.addUserToState} />\r\n                </Col>\r\n            </Row>\r\n        </Container>;\r\n    }\r\n}\r\nexport default Users;","import React, { Component } from 'react';\r\nimport {Table, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Col, Row, Container, Button} from 'reactstrap';\r\nimport { USERS_API_URL } from '../constants';\r\nimport RegistrationModal from \"./form/RegistrationModal\";\r\nclass Account extends Component {\r\n    state = {\r\n        item: {},\r\n        id : 0\r\n    }\r\n    componentDidMount() {\r\n        this.getItem();\r\n    }\r\n\r\n    getItem = () => {\r\n        console.log(\"this.props\",this.props);\r\n        let id = this.state.id;\r\n        if(this.props.authUser.id !== undefined)\r\n         id = this.props.authUser.id;\r\n        else{\r\n            let authUserFromStorage=JSON.parse(localStorage.getItem(\"authorizedUser\"));\r\n            if(authUserFromStorage!=null){\r\n                id = authUserFromStorage.id;\r\n            }\r\n        }\r\n\r\n        fetch(`${USERS_API_URL}/${id}`)\r\n            .then(res => res.json())\r\n            .then(res => this.setState({ item: res }))\r\n            .catch(err => console.log(err));\r\n    }\r\n    updateState = () => {\r\n        this.getItem();\r\n    }\r\n    render() {\r\n        console.log('account render', this.props);\r\n        const item = this.state.item\r\n\r\n        return <Table striped>\r\n            <thead className=\"thead-dark\">\r\n            <tr>\r\n                <th>Username</th>\r\n                <th>Password</th>\r\n                <th>Name</th>\r\n                <th style={{ textAlign: \"center\" }}>Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {!item || item.length <= 0 ?\r\n                <tr>\r\n                    <td colSpan=\"5\" align=\"center\"><b>No data available!</b></td>\r\n                </tr>\r\n                :\r\n                    <tr key={item.id}>\r\n                        <td>\r\n                            {item.username}\r\n                        </td>\r\n                        <td>\r\n                            {item.password}\r\n                        </td>\r\n                        <td>\r\n                            {item.name}\r\n                        </td>\r\n\r\n                        <td align=\"center\">\r\n                            <div>\r\n                                <RegistrationModal\r\n                                    isNew={false}\r\n                                    user={item}\r\n                                    updateUserIntoState={this.updateState} />\r\n                                &nbsp;&nbsp;&nbsp;\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                }\r\n            </tbody>\r\n        </Table>\r\n    }\r\n}\r\nexport default Account;","import React, { Component } from 'react';\r\nimport {\r\n    Container, Col, Form,\r\n    FormGroup, Label, Input,\r\n    Button, FormText, FormFeedback,\r\n} from 'reactstrap';\r\nimport {AUTH_API_URL, PATIENTS_API_URL, USERS_API_URL} from \"../../../constants\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'username': '',\r\n            'password': '',\r\n            validate: {\r\n                usernameState: '',\r\n            },\r\n            navigate:false,\r\n            authUser :{}\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    validateEmail(e) {\r\n\r\n        const { validate } = this.state\r\n        if ((e.target.value).length > 2) {\r\n            validate.usernameState = 'has-success'\r\n        } else {\r\n            validate.usernameState = 'has-danger'\r\n        }\r\n        this.setState({ validate })\r\n    }\r\n\r\n    handleChange = async (event) => {\r\n        const { target } = event;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const { name } = target;\r\n        await this.setState({\r\n            [ name ]: value,\r\n        });\r\n    }\r\n\r\n    submitForm(e) {\r\n        e.preventDefault();\r\n        console.log(`Username: ${ this.state.username }`)\r\n\r\n        fetch(AUTH_API_URL, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            credentials: 'same-origin',\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(authUser => {\r\n                localStorage.setItem(\"authorizedUser\",JSON.stringify(authUser));\r\n                this.props.handleLogin(authUser);\r\n                this.setState({navigate:true});\r\n                }\r\n                )\r\n\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    render() {\r\n        const { username, password } = this.state;\r\n        if(!this.state.navigate) {\r\n            return (\r\n                <Container className=\"App\">\r\n                    <h2>Sign In</h2>\r\n                    <Form className=\"form\" onSubmit={(e) => this.submitForm(e)}>\r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Label>Username</Label>\r\n                                <Input\r\n                                    type=\"username\"\r\n                                    name=\"username\"\r\n                                    id=\"exampleEmail\"\r\n                                    placeholder=\"myusername@username.com\"\r\n                                    value={username}\r\n                                    valid={this.state.validate.usernameState === 'has-success'}\r\n                                    invalid={this.state.validate.usernameState === 'has-danger'}\r\n                                    onChange={(e) => {\r\n                                        this.validateEmail(e)\r\n                                        this.handleChange(e)\r\n                                    }}\r\n                                />\r\n                                <FormFeedback valid>\r\n                                    That's a tasty looking username you've got there.\r\n                                </FormFeedback>\r\n                                <FormFeedback>\r\n                                    Uh oh! Looks like there is an issue with your username. Please input a correct\r\n                                    username.\r\n                                </FormFeedback>\r\n                                <FormText>Your username is most likely your username.</FormText>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Label for=\"examplePassword\">Password</Label>\r\n                                <Input\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"examplePassword\"\r\n                                    placeholder=\"********\"\r\n                                    value={password}\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Button>Submit</Button>\r\n                    </Form>\r\n                </Container>\r\n            );\r\n        }else\r\n        {\r\n            return (<Redirect to={'/'}/>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {AUTH_API_URL, LOGOUT_API_URL} from \"../../../constants\";\r\nclass Logout extends Component {\r\n    state = {\r\n        navigate:false\r\n    };\r\n    componentDidMount() {\r\n        this.logout();\r\n    }\r\n\r\n\r\n    logout = () => {\r\n        sessionStorage.removeItem('token');\r\n        console.log(\"localstorage before logout:\",localStorage.getItem('authorizedUser'));\r\n        localStorage.removeItem('authorizedUser');\r\n        console.log(\"localstorage on logout:\",localStorage.getItem('authorizedUser'));\r\n        this.setState({navigate:true});\r\n        this.props.handleLogout({});\r\n\r\n        fetch(LOGOUT_API_URL, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            credentials: 'same-origin',\r\n\r\n        })\r\n            .then(res => res.json())\r\n            .then(user => {console.log(\"Successfully logout\");\r\n\r\n\r\n            })\r\n\r\n            .catch(err => console.log(err));\r\n\r\n    };\r\n\r\n    render(){\r\n    const {navigate} = this.state;\r\n    if (navigate) {\r\n        return <Redirect to=\"/\" push={true}/>;\r\n    }\r\n    return <div>Succesfully logged out</div>\r\n    }\r\n}\r\n\r\nexport default Logout;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({ component: Component, roles, ...rest }) => (\r\n    <Route {...rest} render={props => {\r\n        const currentUser = JSON.parse(localStorage.getItem(\"authorizedUser\"));\r\n        console.log(\"currentUser:\",currentUser)\r\n        if (!currentUser) {\r\n            // not logged in so redirect to login page with the return url\r\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n        }\r\n\r\n        // check if route is restricted by role\r\n        if (currentUser.isAdmin != true) {\r\n            // role not authorised so redirect to home page\r\n            return <Redirect to={{ pathname: '/'}} />\r\n        }\r\n\r\n        // authorised so return component\r\n        return <Component/>\r\n    }} />\r\n)","\r\nexport const Role ={\r\n    \"Admin\":\"admin\",\r\n    \"User\" :\"user\"\r\n}","import React, { Component } from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport PatientsList from './PatientsList';\r\nimport { PATIENTS_API_URL } from '../constants';\r\nclass Patients extends Component {\r\n    state = {\r\n        items: []\r\n    }\r\n    componentDidMount() {\r\n        this.getItems();\r\n    }\r\n    getItems = () => {\r\n        fetch( PATIENTS_API_URL,  {credentials: 'same-origin'})\r\n            .then(res => res.json())\r\n            .then(res => this.setState({ items: res }))\r\n            .catch(err => console.log(err));\r\n    }\r\n    render() {\r\n        return <Container style={{ paddingTop: \"100px\" }}>\r\n            <Row>\r\n                <Col>\r\n                    <h3>Patients</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <PatientsList\r\n                        items={this.state.items}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </Container>;\r\n    }\r\n}\r\nexport default Patients;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const ProtectedRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => {\r\n        const currentUser = JSON.parse(localStorage.getItem(\"authorizedUser\"));\r\n        console.log(\"currentUser:\",currentUser)\r\n        if (!currentUser) {\r\n            // not logged in so redirect to login page with the return url\r\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n        }\r\n\r\n        // authorised so return component\r\n        return <Component/>\r\n    }} />\r\n)","import React, { Component, Fragment } from 'react';\nimport AppHeader from './components/AppHeader';\nimport AppFooter from './components/AppFooter';\nimport Home from './components/Home';\nimport {Link, Route, BrowserRouter as Router , Switch} from \"react-router-dom\";\nimport Users from \"./components/Users\";\nimport Account from \"./components/Account\";\nimport Login from \"./components/form/auth/Login\";\nimport Logout from \"./components/form/auth/Logout\";\nimport {PrivateRoute} from \"./components/PrivateRoute\";\nimport {Role} from \"./_helpers/Role\";\nimport Patients from \"./components/Patients\";\nimport \"./App.css\";\nimport {ProtectedRoute} from \"./components/ProtectedRoute\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentUser: {}\n        }\n    }\n    setGlobalCredentials = (authUser) => {\n        console.log(\"authUser\",authUser)\n            this.setState({\n                currentUser: authUser\n            });\n    }\n\n\n  render() {\n        console.log('APP.js render', this.state);\n    return <Router>\n        <Fragment>\n\n          <AppHeader />\n\n        <Switch>\n            <PrivateRoute path=\"/users\" roles={[Role.Admin]} component={Users} />\n            <ProtectedRoute path=\"/account\" component={() => <Account authUser={this.state.currentUser}/>} />\n            <Route path=\"/login\" >\n                <Login handleLogin={this.setGlobalCredentials}/>\n            </Route>\n            <Route path=\"/logout\">\n                <Logout handleLogout={this.setGlobalCredentials}/>\n                \n            </Route>\n            <ProtectedRoute path=\"/patients\" component={Patients}/>\n\n<Route path=\"/\">\n    <Home/>\n</Route>\n\n        </Switch>\n          <AppFooter />\n        </Fragment>;\n      </Router>\n\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}